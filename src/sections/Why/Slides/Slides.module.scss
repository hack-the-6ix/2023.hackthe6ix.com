@use '~@ht6/react-ui/dist/styles/mixins.module';
@use '~@ht6/react-ui/dist/styles/colors.module';
@use '../../../styles/colors.module' as localColors;
@use '../../../styles/mixins.module' as localMixins;
@use 'sass:math';

.root {
  display: flex;
  align-items: center;
}

.control {
  @include mixins.transition(transform opacity color);
  color: colors.getColor(neutral-50);
  background: none;
  cursor: pointer;
  padding: 0.5rem;
  display: flex;
  border: none;

  &:not(:disabled) {
    &:hover,
    &:focus {
      color: colors.getColor(neutral-100, hover);
      transform: scale(1.1);
    }

    &:active {
      color: colors.getColor(neutral-100, active);
      transform: scale(1);
    }
  }

  &:disabled {
    color: colors.getColor(disabled);
    opacity: 0.25;
    cursor: not-allowed;
  }
}

.items {
  scroll-behavior: smooth;
  list-style-type: none;
  overflow-x: hidden;
  display: flex;
  align-items: center;
  padding: 0;
  margin: 0;
  width: 100%;
  
  &::-webkit-scrollbar {
    display: none;
  }
  scrollbar-width: none;
}

@media screen and (min-width: 425px) {
  .items {
    overflow-x: scroll !important;
  }
}

.item {
  @include mixins.transition(transform);
  background-color: #fff;
  border-radius: 12px;
  padding: 32px 0;
  box-sizing: border-box;
  justify-content: center;
  min-width: 33.3333333%;
  
  display: flex;
  transform: scale(0.95);

  &:last-child {
    margin-right: 0;
  }

  .wrapper {
    width: 70%;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .image {
    box-sizing: border-box;
    border: 0.25rem solid colors.getColor(primary-1);
    border-radius: 50%;
    width: 20%;
    height: 20%;
    aspect-ratio: 1 / 1;
  }
  
  .title {
    font-weight: 700;
    font-size: 16px;
    font-style: italic;
    line-height: 25px;
    margin: 0;
  }
  
  .content {
    font-size: 14px;
    line-height: 20px;
    margin: 0;
  }

  .label {
    color: colors.getColor(primary-600);
    margin: 0;
  }
}